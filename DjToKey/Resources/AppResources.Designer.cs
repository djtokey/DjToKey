//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ktos.DjToKey.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ktos.DjToKey.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}\n\nThis is a very basic MIDI-controller to script mapper. It allows you to prepare custom scripts for moving mouse, pressing keys and similar things, fired every time some action on your MIDI device occurs. For example, you can bind your Deck from DJ console to a mouse wheel.\n\nCopyright (C) Marcin Badurowicz 2015\nIcon used from: https://icons8.com/.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DjToKey.
        /// </summary>
        public static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string btnSave {
            get {
                return ResourceManager.GetString("btnSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error when reading device description file!.
        /// </summary>
        public static string ControlFileError {
            get {
                return ResourceManager.GetString("ControlFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description file found for this MIDI device!.
        /// </summary>
        public static string ControlFileNotFound {
            get {
                return ResourceManager.GetString("ControlFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control bindings:.
        /// </summary>
        public static string gbBindings {
            get {
                return ResourceManager.GetString("gbBindings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to about.
        /// </summary>
        public static string lbAbout {
            get {
                return ResourceManager.GetString("lbAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIDI device:.
        /// </summary>
        public static string lbDevice {
            get {
                return ResourceManager.GetString("lbDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins.
        /// </summary>
        public static string lbPlugins {
            get {
                return ResourceManager.GetString("lbPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIDI device error!.
        /// </summary>
        public static string MidiError {
            get {
                return ResourceManager.GetString("MidiError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No MIDI devices found!.
        /// </summary>
        public static string NoMidiMessage {
            get {
                return ResourceManager.GetString("NoMidiMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins loaded:.
        /// </summary>
        public static string PluginsMessage {
            get {
                return ResourceManager.GetString("PluginsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured when handling control {0}: {1}.
        /// </summary>
        public static string ScriptErrorMessage {
            get {
                return ResourceManager.GetString("ScriptErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DjToKey will now work in the background..
        /// </summary>
        public static string TrayMessage {
            get {
                return ResourceManager.GetString("TrayMessage", resourceCulture);
            }
        }
    }
}
