name:  Continuous Integration

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x86, x64, arm64]

    runs-on: windows-latest

    env:      
      Solution_Path: DjToKey.sln      
      Wpf_Project_Path: DjToKey\DjToKey.csproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPath and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Use GitVersion
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0'

    # # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    # - name: Setup MSBuild.exe
    #   uses: microsoft/setup-msbuild@v1.0.1
    
    # Restore the application
    - name: Restore      
      run: dotnet restore $env:Solution_Path      

    # Build the application
    - name: Build
      run: dotnet build -r $env:RuntimeIdentifier -c $env:Configuration /p:InformationalVersion=${{ steps.gitversion.outputs.fullSemVer }} /p:Version=${{ steps.gitversion.outputs.semVer }} --self-contained $env:Wpf_Project_Path
      env:
        Configuration: Debug
        RuntimeIdentifier: win-${{ matrix.targetplatform }}

    # Run unit/integration tests
    - name: Execute Unit Tests
      run: dotnet test $env:Solution_Path